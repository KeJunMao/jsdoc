import path from "path";
import fg from "fast-glob";
import fs from "fs-extra";

export const pwd = process.cwd();
export const sourcePath = path.resolve(pwd, "./jsdoc.github.io");
export const sourceContentPath = path.resolve(sourcePath, "./content/en/");
export const tempPath = path.resolve(pwd, "./temp");

export async function moveFilesWithGlob(glob: string, targetPath) {
  if (!fs.existsSync(targetPath)) {
    fs.mkdirSync(targetPath);
  }
  const files = await fg(glob);
  console.log(files);
  for (const file of files) {
    fs.writeFileSync(
      file,
      fs
        .readFileSync(file, { encoding: "utf-8" })
        .replace(/{%\s?(end)?example\s?"?(.*?)"?\s?%}/gm, (_$, $1, $2) =>
          !!$1 ? "" : $2 ? `\n<b>${$2}</b>\n` : "\n"
        )
        .replace("{# autogenerated #}", "")
    );

    if (file.endsWith("tags-type.md")) {
      const data = fs
        .readFileSync(file, { encoding: "utf-8" })
        .replace(/<p>\s*<p>/gm, "</p><p>");
      fs.writeFileSync(file, data);
    }

    fs.moveSync(file, path.join(targetPath, path.basename(file)), {
      overwrite: true,
    });
  }
}
